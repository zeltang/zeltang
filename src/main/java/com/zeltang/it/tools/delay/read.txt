生成订单30分钟未支付，则自动取消

数据库轮询
优点:简单易行，支持集群操作
缺点:
(1)对服务器内存消耗大
(2)存在延迟，比如你每隔3分钟扫描一次，那最坏的延迟时间就是3分钟
(3)假设你的订单有几千万条，每隔几分钟这样扫描一次，数据库损耗极大

JDK的延迟队列
该方案是利用JDK自带的DelayQueue来实现，这是一个无界阻塞队列，该队列只有在延迟期满的时候才能从中获取元素，放入DelayQueue中的对象，是必须实现Delayed接口的
优点:效率高,任务触发时间延迟低。关于java进阶技术路线：https://www.yoodb.com/
缺点:
(1)服务器重启后，数据全部消失，怕宕机
(2)集群扩展相当麻烦
(3)因为内存条件限制的原因，比如下单未付款的订单数太多，那么很容易就出现OOM异常
(4)代码复杂度较高

时间轮算法
用Netty的HashedWheelTimer来实现
优点:效率高,任务触发时间延迟时间比delayQueue低，代码复杂度比delayQueue低。
缺点:
1)服务器重启后，数据全部消失，怕宕机
2)集群扩展相当麻烦
3)因为内存条件限制的原因，比如下单未付款的订单数太多，那么很容易就出现OOM异常

redis缓存
利用redis的zset，zset是一个有序集合，每一个元素(member)都关联了一个score,通过score排序来取集合中的值。
优点:
(1)由于使用Redis作为消息通道，消息都存储在Redis中。如果发送程序或者任务处理程序挂了，重启之后，还有重新处理数据的可能性。
(2)做集群扩展相当方便
(3)时间准确度高
缺点:
(1)需要额外进行redis维护
